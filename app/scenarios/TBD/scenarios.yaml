---
<!-- scenario_90.yaml -->
id: 90
name: "Filtered Injection Inside Event Handler"
description: "Filtered injection inside an onload event handler"
category: "Brutelogic XSS Gym"
template_block: "event_handler_block"
html_snippet: |
  <div onload="{{ payload }}">Hello</div>
js_snippet: |
  // No custom JS

---
<!-- scenario_91.yaml -->
id: 91
name: "Injection in Attribute Value – Single Quote Delimiter"
description: "Injection into an attribute delimited by single quotes"
category: "Brutelogic XSS Gym"
template_block: "attr_single_quote_block"
html_snippet: |
  <img src='{{ payload }}'>
js_snippet: |
  // No custom JS

---
<!-- scenario_92.yaml -->
id: 92
name: "Filtered Injection in Attribute Value – Double Quote Delimiter"
description: "Filtered injection into an attribute with double quotes"
category: "Brutelogic XSS Gym"
template_block: "attr_double_quote_filtered_block"
html_snippet: |
  <input value="{{ payload }}">
js_snippet: |
  // No custom JS

---
<!-- scenario_93.yaml -->
id: 93
name: "Filtered Injection in Attribute Value – Single Quote Delimiter"
description: "Filtered injection into an attribute with single quotes"
category: "Brutelogic XSS Gym"
template_block: "attr_single_quote_filtered_block"
html_snippet: |
  <input value='{{ payload }}'>
js_snippet: |
  // No custom JS

---
<!-- scenario_94.yaml -->
id: 94
name: "Injection in Textarea Tag"
description: "Injection inside a <textarea>"
category: "Brutelogic XSS Gym"
template_block: "textarea_tag_block"
html_snippet: |
  <textarea>{{ payload }}</textarea>
js_snippet: |
  // No custom JS

---
<!-- scenario_95.yaml -->
id: 95
name: "Injection in Script Tag – Single Quote Delimiter"
description: "Injection inside a script using single quotes"
category: "Brutelogic XSS Gym"
template_block: "script_single_quote_block"
html_snippet: |
  // only js
js_snippet: |
  let data = '{{ payload }}';

---
<!-- scenario_96.yaml -->
id: 96
name: "Injection in Script Tag – Double Quote Delimiter"
description: "Injection inside a script using double quotes"
category: "Brutelogic XSS Gym"
template_block: "script_double_quote_block"
html_snippet: |
  //no html
js_snippet: |
  let data = "{{ payload }}";

---
<!-- scenario_97.yaml -->
id: 97
name: "Injection in Javascript Variable – Single Quote Delimiter"
description: "Payload inserted in JS variable with single quotes"
category: "Brutelogic XSS Gym"
template_block: "js_var_single_quote_block"
html_snippet: |
  <div>Single quote JS var</div>
js_snippet: |
  let user = '{{ payload }}';

---
<!-- scenario_98.yaml -->
id: 98
name: "Injection in Javascript Variable – Double Quote Delimiter"
description: "Payload inserted in JS variable with double quotes"
category: "Brutelogic XSS Gym"
template_block: "js_var_double_quote_block"
html_snippet: |
  <div>Double quote JS var</div>
js_snippet: |
  let user = "{{ payload }}";

---
<!-- scenario_99.yaml -->
id: 99
name: "Filtered Injection in Javascript Variable – Single Quote Delimiter"
description: "Filtered payload in JS var single quotes"
category: "Brutelogic XSS Gym"
template_block: "js_var_single_filtered_block"
html_snippet: |
  <div>Filtered single quote var</div>
js_snippet: |
  function sanitize(input) {
    return input
      .replace(/'/g, '&#39;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;');
  }
  let sanitized = sanitize('{{ payload }}');

---
<!-- scenario_100.yaml -->
id: 100
name: "Filtered Injection in Javascript Variable – Double Quote Delimiter"
description: "Filtered payload in JS var double quotes"
category: "Brutelogic XSS Gym"
template_block: "js_var_double_filtered_block"
html_snippet: |
  <div>Filtered double quote var</div>
js_snippet: |
  function sanitize(input) {
    return input
      .replace(/"/g, '&quot;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;');
  }
  let sanitized = sanitize("{{ payload }}");

---
<!-- scenario_101.yaml -->
id: 101
name: "Injection in Script Tag – Backticks Delimiter"
description: "Payload injected inside backticks template"
category: "Brutelogic XSS Gym"
template_block: "script_backticks_block"
html_snippet: |
  <script>
    let msg = `{{ payload }}`;
  </script>
js_snippet: |
  // No custom JS

---
<!-- scenario_102.yaml -->
id: 102
name: "Injection in Javascript Variable – Backticks Delimiter"
description: "Payload injected inside JS backtick variable"
category: "Brutelogic XSS Gym"
template_block: "js_var_backticks_block"
html_snippet: |
  <div>Backtick JS var</div>
js_snippet: |
  let data = `{{ payload }}`;

---
<!-- scenario_103.yaml -->
id: 103
name: "Filtered Injection in Javascript Variable – Backticks Delimiter"
description: "Filtered payload in backticks variable"
category: "Brutelogic XSS Gym"
template_block: "js_var_backticks_filtered_block"
html_snippet: |
  <div>Filtered backtick var</div>
js_snippet: |
  let safeData = `{{ payload }}`;

---
<!-- scenario_104.yaml -->
id: 104
name: "To modify - Filtered Injection in Javascript Variable – Backticks Delimiter"
description: "Another filtered payload in backticks variable"
category: "Brutelogic XSS Gym"
template_block: "js_var_backticks_filtered2_block"
html_snippet: |
  <div>Filtered backtick var with encodeURIComponent</div>
js_snippet: |
  let safeData = `Encoded: ${encodeURIComponent('{{ payload }}')}`;

---
<!-- scenario_105.yaml -->
id: 105
name: "To modify - Validated Injection in HTTP Reference"
description: "Payload validated and used in HTTP referrer"
category: "Brutelogic XSS Gym"
template_block: "http_referrer_block"
html_snippet: |
  <div id="log"></div>
js_snippet: |
  // Simulated referer injection
  let simulatedReferrer = "{{ payload }}";
  document.getElementById("log").innerHTML = simulatedReferrer;


---
<!-- scenario_106.yaml -->
id: 106
name: "To modify - Injection in HTTP Header"
description: "Payload injected into custom HTTP header"
category: "Brutelogic XSS Gym"
template_block: "http_header_block"
html_snippet: |
  <div>Custom HTTP header</div>
js_snippet: |
  fetch("/api", {
    headers: { "X-Injected": "{{ payload }}" }
  });

---
<!-- scenario_107.yaml -->
id: 107
name: "Filtered Double Injection in Javascript Variable"
description: "Filtered double injection in JS var"
category: "Brutelogic XSS Gym"
template_block: "js_double_injection_block"
html_snippet: |
  <div>Double injection test</div>
js_snippet: |
  let part1 = '{{ payload }}', part2 = '{{ payload }}';

---
<!-- scenario_108.yaml -->
id: 108
name: "Injection in Javascript DOM – Document Sink"
description: "Payload sinks into document.write"
category: "Brutelogic XSS Gym"
template_block: "dom_document_sink_block"
html_snippet: |
  <div>DOM document sink</div>
js_snippet: |
  document.write('{{ payload }}');

---
<!-- scenario_109.yaml -->
id: 109
name: "Injection in Javascript DOM – Location Sink"
description: "Payload sinks into location.href"
category: "Brutelogic XSS Gym"
template_block: "dom_location_sink_block"
html_snippet: |
  <div>Location sink</div>
js_snippet: |
  location.href = '{{ payload }}';

---
<!-- scenario_110.yaml -->
id: 110
name: "Injection in Javascript DOM – Execution Sink"
description: "Payload sinks into execution context"
category: "Brutelogic XSS Gym"
template_block: "dom_exec_sink_block"
html_snippet: |
  <div>Execution sink</div>
js_snippet: |
  eval('{{ payload }}');

---
<!-- scenario_111.yaml -->
id: 111
name: "To modify - Filtered Injection in HTML Comments"
description: "Filtered payload inside HTML comment"
category: "Brutelogic XSS Gym"
template_block: "html_comment_filtered_block"
html_snippet: |
  <!-- {{ payload }} -->
js_snippet: |
  // No custom JS

---
<!-- scenario_112.yaml -->
id: 112
name: "To modify Filtered Injection in Javascript DOM – Document Sink"
description: "Filtered payload in document.write"
category: "Brutelogic XSS Gym"
template_block: "dom_document_filtered_block"
html_snippet: |
  <div>Filtered document sink</div>
js_snippet: |
  document.write('{{ payload }}');

---
<!-- scenario_113.yaml -->
id: 113
name: "Injection in Script Tag With Header"
description: "Injection in script tag with special header"
category: "Brutelogic XSS Gym"
template_block: "script_header_block"
html_snippet: |
  <script type="application/javascript">
    {{ payload }}
  </script>
js_snippet: |
  // No custom JS

---
<!-- scenario_114.yaml -->
id: 114
name: "Injection in URL"
description: "Payload injected into URL parameter"
category: "Brutelogic XSS Gym"
template_block: "url_injection_block"
html_snippet: |
  <a href="/profile?name={{ payload }}">Profile</a>
js_snippet: |
  // No custom JS

---
<!-- scenario_115.yaml -->
id: 115
name: "Injection Bypassing CSP"
description: "Injection designed to bypass CSP"
category: "Brutelogic XSS Gym"
template_block: "csp_bypass_block"
html_snippet: |
  <div>CSP Bypass attempt</div>
js_snippet: |
  let src = '{{ payload }}';
  let el = document.createElement("script");
  el.src = src;
  document.body.appendChild(el);
