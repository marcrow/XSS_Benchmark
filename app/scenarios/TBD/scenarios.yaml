---
<!-- scenario_51.yaml -->
id: 51
name: "Scenario 51 - payload in eval()"
description: "Payload injected directly into eval"
category: "JavaScript"
template_block: "js_eval_block"
html_snippet: |
  <div>Evaluating payload...</div>
js_snippet: |
  eval("console.log('{{ payload }}')");

---
<!-- scenario_52.yaml -->
id: 52
name: "Scenario 52 - setTimeout string execution"
description: "Payload passed as code string to setTimeout"
category: "JavaScript"
template_block: "js_settimeout_block"
html_snippet: |
  <div>Testing setTimeout</div>
js_snippet: |
  setTimeout("console.log('{{ payload }}')", 10);

---
<!-- scenario_53.yaml -->
id: 53
name: "Scenario 53 - payload in new Function()"
description: "Payload used in Function constructor"
category: "JavaScript"
template_block: "js_newfunction_block"
html_snippet: |
  <div>Running new Function...</div>
js_snippet: |
  let f = new Function("console.log('{{ payload }}')");
  f();

---
<!-- scenario_54.yaml -->
id: 54
name: "Scenario 54 - payload in script injection"
description: "Script element created and payload assigned as content"
category: "JavaScript"
template_block: "js_create_script_block"
html_snippet: |
  <div>Injecting script element</div>
js_snippet: |
  let s = document.createElement("script");
  s.textContent = "{{ payload }}";
  document.body.appendChild(s);

---
<!-- scenario_55.yaml -->
id: 55
name: "Scenario 55 - innerHTML assignment"
description: "Payload inserted into innerHTML of div"
category: "JavaScript"
template_block: "js_innerhtml_block"
html_snippet: |
  <div id="xssTarget"></div>
js_snippet: |
  document.getElementById("xssTarget").innerHTML = "{{ payload }}";

---
<!-- scenario_56.yaml -->
id: 56
name: "Scenario 56 - iframe.src via payload"
description: "Payload assigned to iframe.src"
category: "JavaScript"
template_block: "js_iframe_src_block"
html_snippet: |
  <iframe id="i1"></iframe>
js_snippet: |
  document.getElementById("i1").src = "{{ payload }}";

---
<!-- scenario_57.yaml -->
id: 57
name: "Scenario 57 - JSON.parse with payload"
description: "Payload wrapped as JSON string and parsed"
category: "JavaScript"
template_block: "js_json_parse_block"
html_snippet: |
  <div>Parsing JSON</div>
js_snippet: |
  let obj = JSON.parse('{"key": "{{ payload }}"}');
  console.log(obj.key);

---
<!-- scenario_58.yaml -->
id: 58
name: "Scenario 58 - dynamic attribute with setAttribute"
description: "Payload used with setAttribute"
category: "JavaScript"
template_block: "js_setattribute_block"
html_snippet: |
  <div id="target"></div>
js_snippet: |
  document.getElementById("target").setAttribute("data-x", "{{ payload }}");

---
<!-- scenario_59.yaml -->
id: 59
name: "Scenario 59 - payload as script.src"
description: "Payload used as script src"
category: "JavaScript"
template_block: "js_script_src_block"
html_snippet: |
  <div>Loading script</div>
js_snippet: |
  let s = document.createElement("script");
  s.src = "{{ payload }}";
  document.head.appendChild(s);

---
<!-- scenario_60.yaml -->
id: 60
name: "Scenario 60 - document.write with payload"
description: "Payload used inside document.write"
category: "JavaScript"
template_block: "js_docwrite_block"
html_snippet: |
  <div>Using document.write</div>
js_snippet: |
  document.write("{{ payload }}");

---
<!-- scenario_61.yaml -->
id: 61
name: "Scenario 61 - onclick dynamic assignment"
description: "Payload as onclick handler via JS"
category: "JavaScript"
template_block: "js_onclick_assign_block"
html_snippet: |
  <button id="b1">Click</button>
js_snippet: |
  document.getElementById("b1").setAttribute("onclick", "{{ payload }}");

---
<!-- scenario_62.yaml -->
id: 62
name: "Scenario 62 - href JS assignment"
description: "Payload assigned to href attribute"
category: "JavaScript"
template_block: "js_href_assign_block"
html_snippet: |
  <a id="link">Link</a>
js_snippet: |
  document.getElementById("link").href = "{{ payload }}";

---
<!-- scenario_63.yaml -->
id: 63
name: "Scenario 63 - innerText assignment"
description: "Payload assigned to innerText"
category: "JavaScript"
template_block: "js_innertext_block"
html_snippet: |
  <div id="info"></div>
js_snippet: |
  document.getElementById("info").innerText = "{{ payload }}";

---
<!-- scenario_64.yaml -->
id: 64
name: "Scenario 64 - createTextNode with payload"
description: "Payload used in DOM text node"
category: "JavaScript"
template_block: "js_createtext_block"
html_snippet: |
  <div id="txt"></div>
js_snippet: |
  let node = document.createTextNode("{{ payload }}");
  document.getElementById("txt").appendChild(node);

---
<!-- scenario_65.yaml -->
id: 65
name: "Scenario 65 - array index with payload"
description: "Payload used as array index"
category: "JavaScript"
template_block: "js_array_index_block"
html_snippet: |
  <div>Array lookup</div>
js_snippet: |
  let arr = []; arr["{{ payload }}"] = "x"; console.log(arr["{{ payload }}"]);

---
<!-- scenario_66.yaml -->
id: 66
name: "Scenario 66 - Function body with payload param"
description: "Payload passed as param to dynamic function"
category: "JavaScript"
template_block: "js_funcparam_block"
html_snippet: |
  <div>Running dynamic function</div>
js_snippet: |
  new Function("x", "{{ payload }}")("value");

---
<!-- scenario_67.yaml -->
id: 67
name: "Scenario 67 - location.href assignment"
description: "Payload redirected via JS"
category: "JavaScript"
template_block: "js_location_href_block"
html_snippet: |
  <div>Redirect test</div>
js_snippet: |
  location.href = "{{ payload }}";

---
<!-- scenario_68.yaml -->
id: 68
name: "Scenario 68 - srcdoc iframe injection"
description: "Payload inserted in iframe srcdoc"
category: "JavaScript"
template_block: "js_iframe_srcdoc_block"
html_snippet: |
  <iframe id="xssFrame"></iframe>
js_snippet: |
  document.getElementById("xssFrame").srcdoc = "{{ payload }}";

---
<!-- scenario_69.yaml -->
id: 69
name: "Scenario 69 - template innerHTML injection"
description: "Payload in a <template> innerHTML"
category: "JavaScript"
template_block: "js_template_inner_block"
html_snippet: |
  <template id="tpl"></template>
js_snippet: |
  document.getElementById("tpl").innerHTML = "{{ payload }}";

---
<!-- scenario_70.yaml -->
id: 70
name: "Scenario 70 - payload inside setInterval"
description: "Payload evaluated via setInterval"
category: "JavaScript"
template_block: "js_setinterval_block"
html_snippet: |
  <div>Testing setInterval</div>
js_snippet: |
  setInterval("console.log('{{ payload }}')", 1000);

---
<!-- scenario_71.yaml -->
id: 71
name: "Scenario 71 - onerror image injection"
description: "Payload executed in dynamically created img"
category: "JavaScript"
template_block: "js_img_onerror_block"
html_snippet: |
  <div>Testing dynamic image</div>
js_snippet: |
  let i = document.createElement("img");
  i.setAttribute("onerror", "{{ payload }}");
  i.src = "invalid.jpg";
  document.body.appendChild(i);

---
<!-- scenario_72.yaml -->
id: 72
name: "Scenario 72 - payload in dynamic form action"
description: "Payload as form action target"
category: "JavaScript"
template_block: "js_form_action_block"
html_snippet: |
  <form id="f1" method="get"></form>
js_snippet: |
  document.getElementById("f1").action = "{{ payload }}";

---
<!-- scenario_73.yaml -->
id: 73
name: "Scenario 73 - dynamic link via createElement"
description: "Anchor created and href set via payload"
category: "JavaScript"
template_block: "js_create_anchor_block"
html_snippet: |
  <div>Dynamic anchor</div>
js_snippet: |
  let a = document.createElement("a");
  a.href = "{{ payload }}";
  a.innerText = "Go";
  document.body.appendChild(a);

---
<!-- scenario_74.yaml -->
id: 74
name: "Scenario 74 - payload as CSS in style.innerHTML"
description: "Payload injected into <style> inner content"
category: "JavaScript"
template_block: "js_style_innerhtml_block"
html_snippet: |
  <style id="s1"></style>
js_snippet: |
  document.getElementById("s1").innerHTML = "{{ payload }}";

---
<!-- scenario_75.yaml -->
id: 75
name: "Scenario 75 - className assignment"
description: "Payload assigned to DOM className"
category: "JavaScript"
template_block: "js_classname_block"
html_snippet: |
  <div id="user"></div>
js_snippet: |
  document.getElementById("user").className = "{{ payload }}";

---
<!-- scenario_76.yaml -->
id: 76
name: "Scenario 76 - data-* attribute via dataset"
description: "Payload used in dataset property"
category: "JavaScript"
template_block: "js_dataset_block"
html_snippet: |
  <div id="target"></div>
js_snippet: |
  document.getElementById("target").dataset.info = "{{ payload }}";

---
<!-- scenario_77.yaml -->
id: 77
name: "Scenario 77 - payload via history.pushState"
description: "Payload used in pushState URL"
category: "JavaScript"
template_block: "js_pushstate_block"
html_snippet: |
  <div>History manipulation</div>
js_snippet: |
  history.pushState({}, "", "{{ payload }}");

---
<!-- scenario_78.yaml -->
id: 78
name: "Scenario 78 - img.src with payload"
description: "Payload injected via image.src"
category: "JavaScript"
template_block: "js_img_src_block"
html_snippet: |
  <img id="image">
js_snippet: |
  document.getElementById("image").src = "{{ payload }}";

---
<!-- scenario_79.yaml -->
id: 79
name: "Scenario 79 - payload in window.name"
description: "Payload assigned to window.name"
category: "JavaScript"
template_block: "js_window_name_block"
html_snippet: |
  <div>Assigning to window.name</div>
js_snippet: |
  window.name = "{{ payload }}";

---
<!-- scenario_80.yaml -->
id: 80
name: "Scenario 80 - URLSearchParams with payload"
description: "Payload used in URLSearchParams"
category: "JavaScript"
template_block: "js_urlparams_block"
html_snippet: |
  <div>URLSearchParams test</div>
js_snippet: |
  let url = new URL("https://example.com");
  url.searchParams.set("x", "{{ payload }}");
  console.log(url.toString());

---
<!-- scenario_81.yaml -->
id: 81
name: "Scenario 81 - WebSocket URL from payload"
description: "Payload used to construct a WebSocket URL"
category: "JavaScript"
template_block: "js_websocket_block"
html_snippet: |
  <div>WebSocket test</div>
js_snippet: |
  let socket = new WebSocket("wss://" + "{{ payload }}");

---
<!-- scenario_82.yaml -->
id: 82
name: "Scenario 82 - dynamic import() using payload"
description: "Payload used as module path in dynamic import"
category: "JavaScript"
template_block: "js_dynamic_import_block"
html_snippet: |
  <div>Importing module</div>
js_snippet: |
  import("{{ payload }}").catch(e => console.error("import failed"));

---
<!-- scenario_83.yaml -->
id: 83
name: "Scenario 83 - payload in localStorage key"
description: "Payload used as key in localStorage"
category: "JavaScript"
template_block: "js_localstorage_key_block"
html_snippet: |
  <div>localStorage test</div>
js_snippet: |
  localStorage.setItem("{{ payload }}", "x");

---
<!-- scenario_84.yaml -->
id: 84
name: "Scenario 84 - payload in localStorage value"
description: "Payload used as value in localStorage"
category: "JavaScript"
template_block: "js_localstorage_value_block"
html_snippet: |
  <div>localStorage value test</div>
js_snippet: |
  localStorage.setItem("key", "{{ payload }}");

---
<!-- scenario_85.yaml -->
id: 85
name: "Scenario 85 - payload in postMessage"
description: "Payload posted via postMessage"
category: "JavaScript"
template_block: "js_postmessage_block"
html_snippet: |
  <iframe id="targetFrame"></iframe>
js_snippet: |
  let frame = document.getElementById("targetFrame").contentWindow;
  frame.postMessage("{{ payload }}", "*");

---
<!-- scenario_86.yaml -->
id: 86
name: "Scenario 86 - fetch URL from payload"
description: "Payload as URL in fetch call"
category: "JavaScript"
template_block: "js_fetch_block"
html_snippet: |
  <div>fetch() call test</div>
js_snippet: |
  fetch("{{ payload }}").then(r => r.text()).then(console.log);

---
<!-- scenario_87.yaml -->
id: 87
name: "Scenario 87 - DOMParser HTML injection"
description: "Payload parsed as HTML via DOMParser"
category: "JavaScript"
template_block: "js_domparser_block"
html_snippet: |
  <div>Parsing HTML string</div>
js_snippet: |
  let doc = new DOMParser().parseFromString("{{ payload }}", "text/html");
  console.log(doc.body.innerHTML);

---
<!-- scenario_88.yaml -->
id: 88
name: "Scenario 88 - CustomEvent with payload as detail"
description: "Payload embedded in custom event data"
category: "JavaScript"
template_block: "js_customevent_block"
html_snippet: |
  <div>Dispatching event</div>
js_snippet: |
  let event = new CustomEvent("xssEvent", { detail: "{{ payload }}" });
  document.dispatchEvent(event);

---
<!-- scenario_89.yaml -->
id: 89
name: "Scenario 89 - CSS selector via payload"
description: "Payload used as a CSS selector string"
category: "JavaScript"
template_block: "js_queryselector_block"
html_snippet: |
  <div>CSS selector test</div>
js_snippet: |
  try {
    document.querySelector("{{ payload }}");
  } catch(e) {
    console.log("Invalid selector");
  }
